#!/usr/local/php-532/bin/php -q
<?php
// vim: set ts=4 sw=4 sts=4 et:

/**
 * LiteCommerce
 * 
 * NOTICE OF LICENSE
 * 
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to licensing@litecommerce.com so we can send you a copy immediately.
 * 
 * @category   LiteCommerce
 * @package    XLite
 * @subpackage Service
 * @author     Creative Development LLC <info@cdev.ru> 
 * @copyright  Copyright (c) 2010 Creative Development LLC <info@cdev.ru>. All rights reserved
 * @license    http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 * @version    SVN: $Id$
 * @link       http://www.litecommerce.com/
 * @see        ____file_see____
 * @since      3.0.0
 */

function _do_query_upload($sqlfile) {
    global $__connection;

    echo '+++ ' . $sqlfile . PHP_EOL;

    ob_start();
    mysql_query('START TRANSACTION', $__connection);
    query_upload($sqlfile, $__connection, false);
    mysql_query('COMMIT', $__connection);
    $output = ob_get_contents();
    ob_end_clean();
    $output = strip_tags($output);

    if (!empty($output) && preg_match('/\[NOTE:/', $output)) {
        echo PHP_EOL . $output . PHP_EOL;
    }
}

function _do_yaml_upload($yamlfile)
{
    echo '+++ ' . $yamlfile . PHP_EOL;
    \Includes\Decorator\Plugin\Doctrine\Utils\FixturesManager::addFixtureToList($yamlfile);
}

if (isset($argv[1]) && $argv[1] == 'help') {
	echo <<<OUT
Usage: $argv[0] [option1] [option2]

where:
  option1 - one of the following: demo (install all demo data), standalone (only demo data for LC standalone distributive), drupal (install only demo data for distributive and enable DrupalConnector module; uses by default).
  option2 - if has a value 'all' then all modules will be enabled (only if option1=demo)

Examples:
  $argv[0]
  $argv[0] demo
  $argv[0] demo all
  $argv[0] standalone

OUT;
	exit;
}

chdir(__DIR__);

define('LC_DO_NOT_REBUILD_CACHE', true);
define('XLITE_INSTALL_MODE', true);

require_once './top.inc.php';

set_time_limit(0);
error_reporting(E_ALL ^ E_NOTICE);

if (file_exists('etc/config.local.php')) {
    $config = parse_ini_file('etc/config.local.php');
 
} else {
    $config = parse_ini_file('etc/config.php');
}
 
$config['hostspec'] .= empty($config['socket'])
   ? (empty($config['port']) ? '' : ':' . $config['port'])
   : ':' . $config['socket'];
$__connection = mysql_connect($config['hostspec'], $config['username'], $config['password']);

if (!$__connection || !mysql_select_db($config['database'], $__connection)) {
    die('Error of MySQL connection. Check etc/config.php file');
}

// Drop all tables
echo '+++ Drop all tables';
mysql_query('SET foreign_key_checks=0');

$res = mysql_query('SHOW TABLES LIKE \'xlite_%\'');

$i = 0;
while ($row = mysql_fetch_assoc($res)) {
    $tbl = array_shift($row);
    mysql_query('DROP TABLE ' . $tbl);
    $i++;
}
mysql_free_result($res);

echo ' [' . $i . ']' . PHP_EOL;

$modules = array();
\Includes\Decorator\Plugin\Doctrine\Utils\FixturesManager::removeFixtures();

_do_yaml_upload('sql/xlite_data.yaml');

if (!isset($argv[1]) || $argv[1] != 'demo') {
    _do_yaml_upload('sql/xlite_demo.yaml');
}

// modules
$enabledModules = array(
    'AustraliaPost',
    'AuthorizeNet',
    'Bestsellers',
    'Quantum',
    'FeaturedProducts',
    'ProductOptions',
);

if (
    (isset($argv[2]) && $argv[2] == 'all')
    || (isset($argv[1]) && 'drupal' == $argv[1])
) {
    $enabledModules[] = 'DrupalConnector';
}

foreach (glob('classes/XLite/Module/CDev/*/Main.php') as $f) {

    $author = basename(dirname(dirname($f)));
    $name = basename(dirname($f));

    // Load install.sql only for enabled modules
    if (preg_match('/.CDev.(?:' . implode('|', $enabledModules) . ')./Ss', $f)) {

        $yamlFile = dirname($f) . '/install.yaml';
        if (file_exists($yamlFile)) {
            _do_yaml_upload($yamlFile);
        }

        if (!isset($modules[$author])) {
            $modules[$author] = array();
        }
        $modules[$author][$name] = 1;
    }
}

_do_yaml_upload('sql/demo/xlite_demo_user.yaml');

if (isset($argv[1]) && $argv[1] == 'demo') {

    _do_yaml_upload('sql/demo/xlite_demo_data.yaml');
    _do_yaml_upload('sql/demo/xlite_demo_store.yaml');
    _do_yaml_upload('sql/demo/xlite_demo_orders.yaml');
    _do_yaml_upload('sql/local/xlite_test_accounts.yaml');
}

if (file_exists('sql/local/xlite_local_demo.yaml')) {
    _do_yaml_upload('sql/local/xlite_local_demo.yaml');
}

// Create modules list
\Includes\Decorator\Utils\ModulesManager::saveModulesToFile($modules);

// Remove disabeld structures
$path = LC_VAR_DIR . '.disabled.structures.php';
if (file_exists($path)) {
    unlink($path);
}

echo 'Setting cache rebuild flag...' . PHP_EOL . PHP_EOL;

\Includes\Decorator\Utils\CacheManager::cleanupCacheIndicators();

\Includes\Utils\FileManager::unlinkRecursive('var/log');
\Includes\Utils\FileManager::unlinkRecursive('var/images');

if (function_exists('apc_clear_cache')) {
    echo 'Clear APC cache' . PHP_EOL . PHP_EOL;
    apc_clear_cache();
}
