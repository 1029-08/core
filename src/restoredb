#!/usr/local/php-532/bin/php -q
<?php
// vim: set ts=4 sw=4 sts=4 et:

/**
 * LiteCommerce
 * 
 * NOTICE OF LICENSE
 * 
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to licensing@litecommerce.com so we can send you a copy immediately.
 * 
 * @category   LiteCommerce
 * @package    XLite
 * @subpackage Service
 * @author     Creative Development LLC <info@cdev.ru> 
 * @copyright  Copyright (c) 2010 Creative Development LLC <info@cdev.ru>. All rights reserved
 * @license    http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 * @version    SVN: $Id$
 * @link       http://www.litecommerce.com/
 * @see        ____file_see____
 * @since      3.0.0
 */

function _do_query_upload($sqlfile, $__connection, $ignoreErrors = false) {
	echo '+++ ' . $sqlfile . PHP_EOL;
	ob_start();
	mysql_query('START TRANSACTION', $__connection);
	query_upload($sqlfile, $__connection, $ignoreErrors);
	mysql_query('COMMIT', $__connection);
	$output = ob_get_contents();
	ob_end_clean();
	$output = strip_tags($output);
	if (!empty($output) && preg_match('/\[NOTE:/', $output)) {
		echo PHP_EOL . $output . PHP_EOL;
	}
}

if (isset($argv[1]) && $argv[1] == 'help') {
	echo <<<OUT
Usage: $argv[0] [option1] [option2]

where:
  option1 - one of the following: demo (install all demo data), standalone (only demo data for LC standalone distributive), drupal (install only demo data for distributive and enable DrupalConnector module; uses by default).
  option2 - if has a value 'all' then all modules will be enabled (only if option1=demo)

Examples:
  $argv[0]
  $argv[0] demo
  $argv[0] demo all
  $argv[0] standalone

OUT;
	exit;
}

chdir(__DIR__);

define('LC_DO_NOT_REBUILD_CACHE', true);
require_once './top.inc.php';

set_time_limit(0);
error_reporting(E_ALL ^ E_NOTICE);
$config = parse_ini_file('etc/config.local.php');

$config['hostspec'] .= empty($config['socket'])
	? (empty($config['port']) ? '' : ':' . $config['port'])
	: ':' . $config['socket'];
$__connection = mysql_connect($config['hostspec'], $config['username'], $config['password']);
mysql_select_db($config['database'], $__connection);

_do_query_upload('sql/xlite_tables.sql', $__connection, true);
_do_query_upload('sql/xlite_data.sql', $__connection, true);
_do_query_upload('sql/xlite_lng_en.sql', $__connection, true);
_do_query_upload('sql/xlite_lng_de.sql', $__connection, true);
_do_query_upload('sql/states_US.sql', $__connection, true);
_do_query_upload('sql/states_GB.sql', $__connection, true);
_do_query_upload('sql/states_CA.sql', $__connection, true);

if (!isset($argv[1]) || $argv[1] != 'demo') {
	_do_query_upload('sql/xlite_demo.sql', $__connection, true);
}

require_once 'classes/XLite/Module/AModule.php';
require_once 'classes/XLite/Base/IPatcher.php';

// modules

foreach (glob('classes/XLite/Module/*/Main.php') as $f) {
	require_once $f;
	$class = str_replace('/', '\\', substr($f, 7, -4));
	$obj = new $class();

	mysql_query(
		'REPLACE INTO xlite_modules SET name = \'' . $dir . '\', mutual_modules = \'' . implode(',', $obj->getMutualModulesList()) . '\', type = \'' . $obj->getModuleType(). '\', installed = 1, version = \'' . $obj->getVersion() . '\', dependencies = \'' . implode(',', $obj->getDependenciesList()) . '\'',
		$__connection
	);

	$sqlFile = dirname($f) . '/install.sql';
	if (file_exists($sqlFile)) {
		_do_query_upload($sqlFile, $__connection, true);
	}
}

_do_query_upload('sql/demo/xlite_demo_user.sql', $__connection, true);

if (isset($argv[1]) && $argv[1] == 'demo') {

    _do_query_upload('sql/demo/xlite_demo_data.sql', $__connection, true);
	_do_query_upload('sql/demo/xlite_demo_store.sql', $__connection, true);
	_do_query_upload('sql/demo/xlite_demo_orders.sql', $__connection, true);
	_do_query_upload('sql/local/xlite_test_accounts.sql', $__connection, true);

	if (isset($argv[2]) && $argv[2] == 'all') {
		_do_query_upload('sql/local/xlite_all_modules.sql', $__connection, true);
	}

} elseif (isset($argv[1]) && in_array($argv[1], array('standalone', 'st', 's', 'stand'))) {
	_do_query_upload('sql/local/xlite_modules_standalone.sql', $__connection, true);

} else {
	_do_query_upload('sql/local/xlite_modules_drupal.sql', $__connection, true);
}

if (file_exists('sql/local/xlite_local_demo.sql')) {
	_do_query_upload('sql/local/xlite_local_demo.sql', $__connection, true);
}

echo 'Remove the var/* sub-directories' . PHP_EOL . PHP_EOL;

\Includes\Utils\FileManager::unlinkRecursive('var/run');
\Includes\Utils\FileManager::unlinkRecursive('var/locale');
\Includes\Utils\FileManager::unlinkRecursive('var/images');
\Includes\Utils\FileManager::unlinkRecursive('var/datacache');
\Includes\Utils\FileManager::unlinkRecursive('var/log');

if (is_resource($__connection)) {
	mysql_close($__connection);
}
